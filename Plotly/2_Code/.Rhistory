library(dplyr)
library(data.table)
library(plotly)
Datei <- "C:/Users/saidr/Desktop/R/DataCamp/Plotly/Data/state_economic_data.csv"
dt_link <- read.csv2(Datei, header = T, sep = ',')
Datei <- "C:/Users/saidr/Desktop/R/DataCamp/Plotly/1_Data/state_economic_data.csv"
dt_link <- read.csv2(Datei, header = T, sep = ',')
options('stringsAsFactors'=FALSE)
colClasse <- c("year" = "numeric", "gdp" = "numeric", 'employement'= "numeric",
'home_owners'= "numeric",'house_price'= "numeric",'population' = "numeric")
dt_link <- as.data.table(dt_link)
dt_link$year <- as.integer(dt_link$year)
dt_link$gdp <- as.numeric(dt_link$gdp)
dt_link$employment <- as.numeric(dt_link$employment)
dt_link$home_owners <- as.numeric(dt_link$home_owners)
dt_link$house_price <- as.numeric(dt_link$house_price)
dt_link$population <- as.numeric(dt_link$population)
View(dt_link)
plot(dt_link)
dt_link %>%
plot_ly(x = ~ gdp, y = ~ house_price) %>%
add_markers(size = ~population, color = ~ region,
frame = ~ year, ids = ~ state,
marker = list(sizemode = 'diameter'))
warning()
dt_link %>%
plot_ly(x = ~ gdp, y = ~ house_price) %>%
add_markers(size = ~population, color = ~ region,
frame = ~ year, #ids = ~ state,
marker = list(sizemode = 'diameter'))
ani <- dt_link %>%
filter(year == 2017) %>%
plot_ly(x = ~gdp, y = ~house_price) %>%
add_markers(size = ~population, color = ~region,
frame = ~ region, ids = ~state,
marker = list(sizemode = "diameter"))
ani
ani <- dt_link %>%
#filter(year == 2017) %>%
plot_ly(x = ~gdp, y = ~house_price) %>%
add_markers(size = ~population, color = ~region,
frame = ~ region, ids = ~state,
marker = list(sizemode = "diameter"))
ani
ani <- dt_link %>%
#filter(year == 2017) %>%
plot_ly(x = ~gdp, y = ~house_price) %>%
add_markers(size = ~population, color = ~region,
frame = ~ [year,region], ids = ~state,
marker = list(sizemode = "diameter"))
ani <- dt_link %>%
#filter(year == 2017) %>%
plot_ly(x = ~gdp, y = ~house_price) %>%
add_markers(size = ~population, color = ~region,
frame = ~ c(year,region), ids = ~state,
marker = list(sizemode = "diameter"))
ani
ani %>%
animation_opts(
frame = 2000,
transition = 300,
easing = "elastic"
) %>%
animation_slider(
currentvalue = list(
prefix = NULL,
font = list(color = 'red')
)
)
ani <- dt_link %>%
#filter(year == 2017) %>%
plot_ly(x = ~gdp, y = ~house_price) %>%
add_markers(size = ~population, color = ~region,
frame = ~ region, ids = ~state,
marker = list(sizemode = "diameter"))
ani
ani <- dt_link %>%
filter(year == 2017) %>%
plot_ly(x = ~gdp, y = ~house_price) %>%
add_markers(size = ~population, color = ~region,
frame = ~ region, ids = ~state,
marker = list(sizemode = "diameter"))
ani
ani
ani
ani %>%
animation_opts(
frame = 2000,
transition = 300,
easing = "elastic"
)
ani %>%
animation_opts(
frame = 2000,
transition = 300,
easing = "elastic"
) %>%
animation_slider(
currentvalue = list(
prefix = NULL,
font = list(color = 'red')
)
)
ani %>%
animation_opts(
frame = 2000,
transition = 300,
easing = "elastic"
) %>%
animation_slider(
currentvalue = list(
prefix = NULL,
font = list(color = 'red')
)
) %>%
layout(
xaxis = list(title = ' Real GDP (Mio.$) ', type = 'log'),
yaxis = list(title = ' House price index')
)
?layout
dt_link %>%
plot_ly(x = ~gdp, y = ~house_price, hoverinfo = "text", text = ~state) %>%
add_text(x = 200000, y = 450, text = ~ year, frame = ~ year,
textfont = list(color = toRGB('gray80'), size = 150)) %>%
add_markers(size = ~population, color = ~region,
frame = ~year, ids = ~state,
marker = list(sizemode = "diameter", sizeref = 3)) %>%
layout(xaxis = list(title = "Real GDP (millions USD)", type = "log"),
yaxis = list(title = "Housing price index")) %>%
animation_slider(hide = T)
dt_link %>%
plot_ly(x = ~gdp, y = ~house_price, hoverinfo = "text", text = ~state) %>%
add_text(x = 200000, y = 450, text = ~ year, frame = ~ year,
textfont = list(color = toRGB('gray80'), size = 150)) %>%
add_markers(size = ~population, color = ~region,
frame = ~year, ids = ~state,
marker = list(sizemode = "diameter", sizeref = 3)) %>%
layout(xaxis = list(title = "Real GDP (millions USD)", type = "log"),
yaxis = list(title = "Housing price index")) %>%
animation_slider(hide = F)
dt_link %>%
plot_ly(x = ~gdp, y = ~house_price, hoverinfo = "text", text = ~state) %>%
add_text(x = 100000, y = 450, text = ~ year, frame = ~ year,
textfont = list(color = toRGB('gray80'), size = 150)) %>%
add_markers(size = ~population, color = ~region,
frame = ~year, ids = ~state,
marker = list(sizemode = "diameter", sizeref = 3)) %>%
layout(xaxis = list(title = "Real GDP (millions USD)", type = "log"),
yaxis = list(title = "Housing price index")) %>%
animation_slider(hide = F)
dt_link %>%
plot_ly(x = ~gdp, y = ~house_price, hoverinfo = "text", text = ~state) %>%
add_text(x = 1000, y = 450, text = ~ year, frame = ~ year,
textfont = list(color = toRGB('gray80'), size = 150)) %>%
add_markers(size = ~population, color = ~region,
frame = ~year, ids = ~state,
marker = list(sizemode = "diameter", sizeref = 3)) %>%
layout(xaxis = list(title = "Real GDP (millions USD)", type = "log"),
yaxis = list(title = "Housing price index")) %>%
animation_slider(hide = F)
dt_link %>%
plot_ly(x = ~gdp, y = ~house_price, hoverinfo = "text", text = ~state) %>%
add_text(x = 1000, y = 8000, text = ~ year, frame = ~ year,
textfont = list(color = toRGB('gray80'), size = 150)) %>%
add_markers(size = ~population, color = ~region,
frame = ~year, ids = ~state,
marker = list(sizemode = "diameter", sizeref = 3)) %>%
layout(xaxis = list(title = "Real GDP (millions USD)", type = "log"),
yaxis = list(title = "Housing price index")) %>%
animation_slider(hide = F)
10**3
dt_link %>%
plot_ly(x = ~gdp, y = ~house_price, hoverinfo = "text", text = ~state) %>%
add_text(x = 10**6, y = 400, text = ~ year, frame = ~ year,
textfont = list(color = toRGB('gray80'), size = 150)) %>%
add_markers(size = ~population, color = ~region,
frame = ~year, ids = ~state,
marker = list(sizemode = "diameter", sizeref = 3)) %>%
layout(xaxis = list(title = "Real GDP (millions USD)", type = "log"),
yaxis = list(title = "Housing price index")) %>%
animation_slider(hide = F)
dt_link %>%
plot_ly(x = ~gdp, y = ~house_price, hoverinfo = "text", text = ~state) %>%
add_text(x = 10**5, y = 400, text = ~ year, frame = ~ year,
textfont = list(color = toRGB('gray80'), size = 150)) %>%
add_markers(size = ~population, color = ~region,
frame = ~year, ids = ~state,
marker = list(sizemode = "diameter", sizeref = 3)) %>%
layout(xaxis = list(title = "Real GDP (millions USD)", type = "log"),
yaxis = list(title = "Housing price index")) %>%
animation_slider(hide = F)
dt_link %>%
plot_ly(x = ~gdp, y = ~house_price, hoverinfo = "text", text = ~state) %>%
add_text(x = 10**5, y = 400, text = ~ year, frame = ~ year,
textfont = list(color = toRGB('gray80'), size = 150)) %>%
add_markers(size = ~population, color = ~region,
frame = ~year, ids = ~state,
marker = list(sizemode = "diameter", sizeref = 3)) %>%
layout(xaxis = list(title = "Real GDP (millions USD)", type = "log10"),
yaxis = list(title = "Housing price index")) %>%
animation_slider(hide = F)
dt_link %>%
plot_ly(x = ~gdp, y = ~house_price, hoverinfo = "text", text = ~state) %>%
add_text(x = 1, y = 400, text = ~ year, frame = ~ year,
textfont = list(color = toRGB('gray80'), size = 150)) %>%
add_markers(size = ~population, color = ~region,
frame = ~year, ids = ~state,
marker = list(sizemode = "diameter", sizeref = 3)) %>%
layout(xaxis = list(title = "Real GDP (millions USD)", type = "log10"),
yaxis = list(title = "Housing price index")) %>%
animation_slider(hide = F)
dt_link %>%
plot_ly(x = ~gdp, y = ~house_price, hoverinfo = "text", text = ~state) %>%
add_text(x = 1, y = 400, text = ~ year, frame = ~ year,
textfont = list(color = toRGB('red'), size = 150)) %>%
add_markers(size = ~population, color = ~region,
frame = ~year, ids = ~state,
marker = list(sizemode = "diameter", sizeref = 3)) %>%
layout(xaxis = list(title = "Real GDP (millions USD)", type = "log10"),
yaxis = list(title = "Housing price index")) %>%
animation_slider(hide = F)
dt_link %>%
plot_ly(x = ~gdp, y = ~house_price, hoverinfo = "text", text = ~state) %>%
add_text(x = 1, y = 400, text = ~ year, frame = ~ year,
textfont = list(color = toRGB('green'), size = 150)) %>%
add_markers(size = ~population, color = ~region,
frame = ~year, ids = ~state,
marker = list(sizemode = "diameter", sizeref = 3)) %>%
layout(xaxis = list(title = "Real GDP (millions USD)", type = "log10"),
yaxis = list(title = "Housing price index")) %>%
animation_slider(hide = F)
dt_link %>%
plot_ly(x = ~gdp, y = ~house_price, hoverinfo = "text", text = ~state) %>%
add_text(x = 1, y = 400, text = ~ year, frame = ~ year,
textfont = list(color = toRGB('green'), size = 150)) %>%
add_markers(size = ~population, color = ~region,
frame = ~year, ids = ~state,
marker = list(sizemode = "diameter", sizeref = 3)) %>%
layout(xaxis = list(title = "Real GDP (millions USD)", type = "log10"),
yaxis = list(title = "Housing price index")) %>%
animation_slider(hide = F, font = list(color = 'red'))
dt_link %>%
plot_ly(x = ~gdp, y = ~house_price, hoverinfo = "text", text = ~state) %>%
add_text(x = 1, y = 400, text = ~ year, frame = ~ year,
textfont = list(color = toRGB('green'), size = 150)) %>%
add_markers(size = ~population, color = ~region,
frame = ~year, ids = ~state,
marker = list(sizemode = "diameter", sizeref = 3)) %>%
layout(xaxis = list(title = "Real GDP (millions USD)", type = "log10"),
yaxis = list(title = "Housing price index")) %>%
animation_slider(hide = F, currentvalue = list(
prefix = NULL, font = list(color = 'red')))
dt_link %>%
plot_ly(x = ~gdp, y = ~house_price, hoverinfo = "text", text = ~state) %>%
add_text(x = 1, y = 400, text = ~ year, frame = ~ year,
textfont = list(color = toRGB('green'), size = 150)) %>%
add_markers(size = ~population, color = ~region,
frame = ~year, ids = ~state,
marker = list(sizemode = "diameter", sizeref = 3)) %>%
layout(xaxis = list(title = "Real GDP (millions USD)", type = "log10"),
yaxis = list(title = "Housing price index")) %>%
animation_slider(hide = F, font = list(color = 'yellow'),currentvalue = list(
prefix = NULL, font = list(color = 'red')))
library(crosstalk)
?SharedData
shared_region <- SharedData$new(dt_link, key = ~region)
shared_region %>%
plot_ly()
shared_region %>%
plot_ly() %>%
filter(year == 2017)
dp_chart <- shared_region %>%
plot_ly() %>%
filter(year == 2017) %>%
group_by(region) %>%
summarize(avg.hpi = mean(house_price, na.rm = TRUE)) %>%
add_markers(x = ~avg.hpi, y = ~region)
dp_chart
dp_chart <- shared_region %>%
plot_ly() %>%
#filter(year == 2017) %>%
group_by(region) %>%
summarize(avg.hpi = mean(house_price, na.rm = TRUE)) %>%
add_markers(x = ~avg.hpi, y = ~region, frame = ~ year)
dp_chart
ts_chart <- shared_region %>%
plot_ly(x = ~year, y = ~house_price) %>%
group_by(state) %>%
add_lines()
ts_chart
